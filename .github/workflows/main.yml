name: Bump and Publish
on:
  release:
    types: [released]
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: 'Cache node Modules'
        uses: actions/cache@v3
        with:
          path: ~.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci --ignore-scripts
      - run: npm test
  bump-and-build:
    needs: tests
    permissions:
      contents: write
      pull-requests: write
      issues: write
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: |
          version=${GITHUB_REF/refs\/tags\//}
          echo "VERSION=$version" >> "$GITHUB_OUTPUT"
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: 'Cache node Modules'
        uses: actions/cache@v3
        with:
          path: ~.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: 'Install Dependencies'
        run: npm ci --ignore-scripts
      - name: 'Set version'
        run: npm --no-git-tag-version --allow-same-version version ${{ steps.get_version.outputs.VERSION }}
      - name: 'Prepare build'
        run: npm run prepare
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ github.token }}
          commit-message: "Bump to ${{ steps.get_version.outputs.VERSION }}"
          title: "Bump to ${{ steps.get_version.outputs.VERSION }}"
          body: "Automated version bump to ${{ steps.get_version.outputs.VERSION }}"
          branch: "bump-${{ steps.get_version.outputs.VERSION }}"
          base: "master"
          delete-branch: true
      - name: Wait for PR to be merged
        if: steps.cpr.outputs.pull-request-number
        run: |
          echo "Pull Request #${{ steps.cpr.outputs.pull-request-number }} has been created."
          echo "Please review, approve and merge the PR manually."
          
          while true; do
            PR_STATE=$(gh pr view ${{ steps.cpr.outputs.pull-request-number }} --json state -q .state)
            if [ "$PR_STATE" = "MERGED" ]; then
              echo "PR has been merged successfully!"
              break
            elif [ "$PR_STATE" = "CLOSED" ]; then
              echo "PR was closed without merging. Exiting..."
              exit 1
            fi
            echo "Waiting for PR to be merged... (checking again in 60 seconds)"
            sleep 60
          done
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Release
        if: steps.cpr.outputs.pull-request-number
        run: npm run release-ci
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
